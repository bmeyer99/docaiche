openapi: 3.0.3
info:
  title: Docaiche Simplified API
  description: |
    Simplified Docaiche API for documentation search and content management.
    This API consolidates all functionality into a clean, maintainable interface.
  version: 2.0.0
  contact:
    name: Docaiche API Support
  license:
    name: MIT

servers:
  - url: http://localhost:8000
    description: Development server
  - url: https://api.docaiche.com
    description: Production server

paths:
  # Search & Content Endpoints
  /api/v1/search:
    post:
      summary: Search documentation
      description: Perform a comprehensive search across all documentation collections
      tags: [Search]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalError'
    
    get:
      summary: Simple search
      description: Perform a simple search using query parameters (for browser testing)
      tags: [Search]
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
            minLength: 1
            maxLength: 500
          description: Search query
        - name: technology
          in: query
          schema:
            type: string
          description: Technology filter
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum results to return
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/upload:
    post:
      summary: Upload document
      description: Upload and process a document for indexing
      tags: [Content]
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: Document file to upload
                collection:
                  type: string
                  description: Target collection for the document
                technology:
                  type: string
                  description: Associated technology/framework
              required: [file]
      responses:
        '202':
          description: Upload accepted for processing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '413':
          $ref: '#/components/responses/PayloadTooLarge'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/content/{content_id}:
    delete:
      summary: Remove content
      description: Flag content for removal (admin operation)
      tags: [Content]
      parameters:
        - name: content_id
          in: path
          required: true
          schema:
            type: string
          description: Unique content identifier
      responses:
        '202':
          description: Content flagged for removal
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  # User Interaction Endpoints
  /api/v1/feedback:
    post:
      summary: Submit feedback
      description: Submit explicit user feedback on search results or content
      tags: [Feedback]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FeedbackRequest'
      responses:
        '202':
          description: Feedback accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  /api/v1/signals:
    post:
      summary: Submit interaction signals
      description: Submit implicit user interaction signals (clicks, dwell time, etc.)
      tags: [Feedback]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignalRequest'
      responses:
        '202':
          description: Signal recorded
        '400':
          $ref: '#/components/responses/BadRequest'
        '429':
          $ref: '#/components/responses/TooManyRequests'

  # System Management Endpoints
  /api/v1/health:
    get:
      summary: Health check
      description: Get comprehensive system health status
      tags: [System]
      responses:
        '200':
          description: System health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/v1/stats:
    get:
      summary: Usage statistics
      description: Get system usage and performance statistics
      tags: [System]
      responses:
        '200':
          description: System statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatsResponse'

  /api/v1/collections:
    get:
      summary: List collections
      description: Get available documentation collections/workspaces
      tags: [System]
      responses:
        '200':
          description: Available collections
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionsResponse'

  # Configuration Endpoints
  /api/v1/config:
    get:
      summary: Get configuration
      description: Retrieve current system configuration
      tags: [Configuration]
      responses:
        '200':
          description: System configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'
    
    post:
      summary: Update configuration
      description: Update system configuration
      tags: [Configuration]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationUpdateRequest'
      responses:
        '200':
          description: Configuration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigurationResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

  # Provider Management Endpoints
  /api/v1/providers:
    get:
      summary: List AI providers
      description: Get list of available AI/LLM providers and their configuration status
      tags: [Providers]
      responses:
        '200':
          description: List of available providers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/providers/{provider_id}/test:
    post:
      summary: Test provider connection
      description: Test connection to a specific AI provider with given configuration
      tags: [Providers]
      parameters:
        - name: provider_id
          in: path
          required: true
          schema:
            type: string
          description: Provider identifier (e.g., 'openai', 'ollama', 'anthropic')
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderConfigRequest'
      responses:
        '200':
          description: Connection test result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderTestResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/providers/{provider_id}/config:
    post:
      summary: Save provider configuration
      description: Save configuration settings for a specific AI provider
      tags: [Providers]
      parameters:
        - name: provider_id
          in: path
          required: true
          schema:
            type: string
          description: Provider identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProviderConfigRequest'
      responses:
        '200':
          description: Configuration saved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  # Activity Tracking Endpoints
  /api/v1/admin/activity/recent:
    get:
      summary: Get recent activity
      description: Get recent system activity for admin dashboard
      tags: [Admin]
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum number of activity items to return
      responses:
        '200':
          description: Recent activity items
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/admin/dashboard:
    get:
      summary: Get dashboard data
      description: Get aggregated data for admin dashboard including stats and system status
      tags: [Admin]
      responses:
        '200':
          description: Dashboard data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DashboardResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  # Administration Endpoints
  /api/v1/admin/search-content:
    get:
      summary: Admin content search
      description: Search and manage content items (admin interface)
      tags: [Admin]
      parameters:
        - name: search_term
          in: query
          schema:
            type: string
          description: Search term for content
        - name: content_type
          in: query
          schema:
            type: string
          description: Filter by content type
        - name: technology
          in: query
          schema:
            type: string
          description: Filter by technology
        - name: status
          in: query
          schema:
            type: string
            enum: [active, flagged, removed]
          description: Filter by content status
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Maximum results to return
        - name: offset
          in: query
          schema:
            type: integer
            minimum: 0
            default: 0
          description: Results offset for pagination
      responses:
        '200':
          description: Admin search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminSearchResponse'
        '400':
          $ref: '#/components/responses/BadRequest'

components:
  schemas:
    # Search Schemas
    SearchRequest:
      type: object
      required: [query]
      properties:
        query:
          type: string
          minLength: 1
          maxLength: 500
          description: Search query string
        technology_hint:
          type: string
          description: Optional technology filter
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
          description: Maximum number of results
        session_id:
          type: string
          description: User session identifier

    SearchResult:
      type: object
      required: [content_id, title, snippet, source_url, technology, relevance_score, content_type, workspace]
      properties:
        content_id:
          type: string
          description: Unique content identifier
        title:
          type: string
          description: Document or section title
        snippet:
          type: string
          description: Relevant content excerpt
        source_url:
          type: string
          format: uri
          description: Original source URL
        technology:
          type: string
          description: Associated technology/framework
        relevance_score:
          type: number
          minimum: 0
          maximum: 1
          description: Relevance score for the query
        content_type:
          type: string
          description: Type of content
        workspace:
          type: string
          description: AnythingLLM workspace

    SearchResponse:
      type: object
      required: [results, total_count, query, execution_time_ms, cache_hit]
      properties:
        results:
          type: array
          items:
            $ref: '#/components/schemas/SearchResult'
          description: Search results list
        total_count:
          type: integer
          description: Total matching results
        query:
          type: string
          description: Original search query
        technology_hint:
          type: string
          description: Applied technology filter
        execution_time_ms:
          type: integer
          description: Search execution time
        cache_hit:
          type: boolean
          description: Whether served from cache
        enrichment_triggered:
          type: boolean
          default: false
          description: Whether knowledge enrichment was triggered

    # Upload Schema
    UploadResponse:
      type: object
      required: [upload_id, status]
      properties:
        upload_id:
          type: string
          description: Unique upload identifier
        status:
          type: string
          enum: [accepted, processing, completed, failed]
          description: Upload processing status
        message:
          type: string
          description: Status message

    # Feedback Schemas
    FeedbackRequest:
      type: object
      required: [content_id, feedback_type]
      properties:
        content_id:
          type: string
          description: Content being rated
        feedback_type:
          type: string
          enum: [helpful, not_helpful, outdated, incorrect, flag]
          description: Type of feedback
        rating:
          type: integer
          minimum: 1
          maximum: 5
          description: Optional star rating
        comment:
          type: string
          maxLength: 1000
          description: Optional feedback comment
        query_context:
          type: string
          description: Search query that led to content
        session_id:
          type: string
          description: User session identifier

    SignalRequest:
      type: object
      required: [query_id, session_id, signal_type]
      properties:
        query_id:
          type: string
          description: Search query session ID
        session_id:
          type: string
          description: User session ID
        signal_type:
          type: string
          enum: [click, dwell, abandon, refine, copy]
          description: Type of interaction signal
        content_id:
          type: string
          description: Interacted content ID
        result_position:
          type: integer
          minimum: 0
          description: Result position (0-based)
        dwell_time_ms:
          type: integer
          minimum: 0
          description: Time spent on result (milliseconds)

    # System Schemas
    HealthStatus:
      type: object
      required: [service, status, last_check]
      properties:
        service:
          type: string
          description: Service component name
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Current health status
        response_time_ms:
          type: integer
          description: Response time in milliseconds
        last_check:
          type: string
          format: date-time
          description: Last health check timestamp
        details:
          type: object
          description: Additional status details

    HealthResponse:
      type: object
      required: [overall_status, services, timestamp]
      properties:
        overall_status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall system health
        services:
          type: array
          items:
            $ref: '#/components/schemas/HealthStatus'
          description: Individual service statuses
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp

    StatsResponse:
      type: object
      required: [search_stats, cache_stats, content_stats, system_stats, timestamp]
      properties:
        search_stats:
          type: object
          description: Search performance and usage statistics
        cache_stats:
          type: object
          description: Cache hit rates and performance
        content_stats:
          type: object
          description: Content collection and quality statistics
        system_stats:
          type: object
          description: System resource and performance statistics
        timestamp:
          type: string
          format: date-time
          description: Statistics timestamp

    Collection:
      type: object
      required: [slug, name, technology, document_count, last_updated, is_active]
      properties:
        slug:
          type: string
          description: Unique collection identifier
        name:
          type: string
          description: Human-readable collection name
        technology:
          type: string
          description: Primary technology or framework
        document_count:
          type: integer
          description: Number of documents in collection
        last_updated:
          type: string
          format: date-time
          description: Last update timestamp
        is_active:
          type: boolean
          description: Whether collection is actively maintained

    CollectionsResponse:
      type: object
      required: [collections, total_count]
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/Collection'
          description: Available documentation collections
        total_count:
          type: integer
          description: Total number of collections

    # Configuration Schemas
    ConfigurationItem:
      type: object
      required: [key, value]
      properties:
        key:
          type: string
          description: Configuration key
        value:
          description: Configuration value (any type)
        schema_version:
          type: string
          default: "1.0"
          description: Configuration schema version
        description:
          type: string
          description: Human-readable description
        is_sensitive:
          type: boolean
          default: false
          description: Whether value contains sensitive data

    ConfigurationResponse:
      type: object
      required: [items, timestamp]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationItem'
          description: Configuration items
        timestamp:
          type: string
          format: date-time
          description: Configuration timestamp

    ConfigurationUpdateRequest:
      type: object
      required: [key, value]
      properties:
        key:
          type: string
          description: Configuration key to update
        value:
          description: New configuration value
        description:
          type: string
          description: Optional description of change

    # Admin Schemas
    AdminContentItem:
      type: object
      required: [content_id, title, content_type, collection_name, created_at, last_updated, status]
      properties:
        content_id:
          type: string
          description: Unique content identifier
        title:
          type: string
          description: Content title
        content_type:
          type: string
          description: Type of content
        technology:
          type: string
          description: Associated technology/framework
        source_url:
          type: string
          format: uri
          description: Original source URL
        collection_name:
          type: string
          description: Collection this content belongs to
        created_at:
          type: string
          format: date-time
          description: Content creation timestamp
        last_updated:
          type: string
          format: date-time
          description: Last modification timestamp
        size_bytes:
          type: integer
          description: Content size in bytes
        status:
          type: string
          enum: [active, flagged, removed]
          description: Current content status

    AdminSearchResponse:
      type: object
      required: [items, total_count, page, page_size, has_more]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AdminContentItem'
          description: Matching content items
        total_count:
          type: integer
          description: Total matching items
        page:
          type: integer
          minimum: 1
          description: Current page number (1-based)
        page_size:
          type: integer
          description: Items per page
        has_more:
          type: boolean
          description: Whether more pages available

    # Provider Management Schemas
    ProviderResponse:
      type: object
      required: [id, name, type, status, configured]
      properties:
        id:
          type: string
          description: Provider identifier
        name:
          type: string
          description: Display name
        type:
          type: string
          description: Provider type (e.g., 'openai', 'ollama', 'anthropic')
        status:
          type: string
          enum: [connected, disconnected, testing, error]
          description: Provider connection status
        configured:
          type: boolean
          description: Whether provider is properly configured

    ProviderConfigRequest:
      type: object
      required: [base_url]
      properties:
        base_url:
          type: string
          format: uri
          description: Provider base URL
        api_key:
          type: string
          description: API key (optional for local providers)
        model:
          type: string
          description: Default model to use

    ProviderTestResponse:
      type: object
      required: [success, message, latency]
      properties:
        success:
          type: boolean
          description: Whether connection test succeeded
        message:
          type: string
          description: Test result message
        latency:
          type: number
          description: Response latency in milliseconds
        models:
          type: array
          items:
            type: string
          description: Available models (if connection successful)

    # Activity Tracking Schemas
    ActivityItem:
      type: object
      required: [id, type, message, timestamp]
      properties:
        id:
          type: string
          description: Activity identifier
        type:
          type: string
          description: Activity type (e.g., 'search', 'upload', 'config')
        message:
          type: string
          description: Activity description
        timestamp:
          type: string
          format: date-time
          description: When activity occurred
        details:
          type: string
          description: Additional activity details

    ActivityResponse:
      type: object
      required: [items, total_count, page, has_more]
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/ActivityItem'
          description: Activity items
        total_count:
          type: integer
          description: Total activity count
        page:
          type: integer
          description: Current page
        has_more:
          type: boolean
          description: Whether more pages exist

    DashboardResponse:
      type: object
      required: [stats, health, activity]
      properties:
        stats:
          type: object
          properties:
            total_searches:
              type: integer
              description: Total number of searches performed
            total_documents:
              type: integer
              description: Total documents indexed
            active_providers:
              type: integer
              description: Number of active/configured providers
            cache_hit_rate:
              type: number
              description: Cache hit rate percentage
          description: System statistics
        health:
          $ref: '#/components/schemas/HealthResponse'
          description: Current system health
        activity:
          type: array
          items:
            $ref: '#/components/schemas/ActivityItem'
          description: Recent activity items

    # Error Schema
    ProblemDetail:
      type: object
      required: [type, title, status]
      properties:
        type:
          type: string
          format: uri
          description: URI identifying the problem type
        title:
          type: string
          description: Human-readable summary
        status:
          type: integer
          description: HTTP status code
        detail:
          type: string
          description: Human-readable explanation
        instance:
          type: string
          format: uri
          description: URI identifying specific occurrence
        error_code:
          type: string
          description: Internal error code
        trace_id:
          type: string
          description: Request trace identifier

  responses:
    BadRequest:
      description: Bad request - invalid input
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://docaiche.com/problems/validation-error"
            title: "Validation Error"
            status: 400
            detail: "The request body contains invalid data"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://docaiche.com/problems/not-found"
            title: "Resource Not Found"
            status: 404
            detail: "The requested resource could not be found"

    TooManyRequests:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://docaiche.com/problems/rate-limit"
            title: "Rate Limit Exceeded"
            status: 429
            detail: "Too many requests - please try again later"

    PayloadTooLarge:
      description: Uploaded file too large
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://docaiche.com/problems/payload-too-large"
            title: "File Too Large"
            status: 413
            detail: "The uploaded file exceeds the maximum size limit"

    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetail'
          example:
            type: "https://docaiche.com/problems/internal-error"
            title: "Internal Server Error"
            status: 500
            detail: "An unexpected error occurred"

tags:
  - name: Search
    description: Documentation search operations
  - name: Content
    description: Content management operations
  - name: Feedback
    description: User feedback and interaction tracking
  - name: System
    description: System health and statistics
  - name: Configuration
    description: System configuration management
  - name: Providers
    description: AI provider management and configuration
  - name: Admin
    description: Administrative operations