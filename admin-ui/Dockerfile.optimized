# Multi-stage build for Docaiche Admin UI - Optimized
FROM node:20-slim AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package.json ./

# Install production dependencies without native compilation where possible
# Sharp will use pre-built binaries, puppeteer should be in devDependencies
RUN npm install --production --no-optional \
    --ignore-scripts \
    --prefer-offline \
    --no-audit \
    --no-fund \
    && npm cache clean --force

# For sharp specifically, run its install script after to get pre-built binaries
RUN npm rebuild sharp

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app

# Copy package files
COPY package.json ./

# Install ALL dependencies for building (including dev)
# We still need some build tools for Next.js compilation
RUN npm install --ignore-scripts \
    --prefer-offline \
    --no-audit \
    --no-fund \
    && npm cache clean --force

# Copy configuration files
COPY tsconfig.json next.config.ts ./
COPY postcss.config.mjs tailwind.config.js components.json ./

# Copy source files
COPY . .

# Disable telemetry during the build
ENV NEXT_TELEMETRY_DISABLED=1
ENV NEXT_PUBLIC_SENTRY_DISABLED=true

# Set build-time environment variables
ARG NEXT_PUBLIC_API_URL=http://api:8000/api/v1
ARG NEXT_PUBLIC_APP_NAME=Docaiche Admin
ARG NEXT_PUBLIC_ENABLE_AUTH=false
ENV NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
ENV NEXT_PUBLIC_APP_NAME=${NEXT_PUBLIC_APP_NAME}
ENV NEXT_PUBLIC_ENABLE_AUTH=${NEXT_PUBLIC_ENABLE_AUTH}

# Build the application
RUN npm run build

# Production image
FROM base AS runner
WORKDIR /app

ENV NODE_ENV=production
ENV NEXT_TELEMETRY_DISABLED=1

# Create a non-root user
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nextjs

# Copy production dependencies from deps stage
COPY --from=deps --chown=nextjs:nodejs /app/node_modules ./node_modules

# Copy built application
COPY --from=builder /app/public ./public
COPY --from=builder --chown=nextjs:nodejs /app/.next/standalone ./
COPY --from=builder --chown=nextjs:nodejs /app/.next/static ./.next/static

# Create .next directory with correct permissions
RUN mkdir -p .next && chown nextjs:nodejs .next

USER nextjs

EXPOSE 3000

ENV PORT=3000
ENV HOSTNAME="0.0.0.0"

# Start the application
CMD ["node", "server.js"]